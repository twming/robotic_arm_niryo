# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Niryo All rights reserved. No part of this document
# may be reproduced or transmitted in any form or by any means without prior
# written consent of Niryo SAS
# This file is distributed under the same license as the Ned ROS
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ned ROS Documentation v4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-18 15:03+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/modbus/modbus_examples.rst:2
msgid "Modbus Examples"
msgstr ""

#: ../../source/modbus/modbus_examples.rst:4
msgid ""
"Examples of Modbus python lib can be found here :modbus_examples:`Python "
"Modbus examples<>`. In the examples folder, you can find several example "
"scripts that control Ned. These scripts are commented to help you "
"understand every step."
msgstr ""

#: ../../source/modbus/modbus_examples.rst:8
msgid "Client Modbus Test"
msgstr ""

#: ../../source/modbus/modbus_examples.rst:9
msgid "Calls several functions on the IO of Ned."
msgstr ""

#: ../../source/modbus/modbus_examples.rst:12
msgid "Client Move Command"
msgstr ""

#: ../../source/modbus/modbus_examples.rst:13
msgid "This script shows the calibration and Ned's moves."
msgstr ""

#: ../../source/modbus/modbus_examples.rst:16
msgid "Client Modbus Conveyor Example"
msgstr ""

#: ../../source/modbus/modbus_examples.rst:17
msgid ""
"This script shows how to activate the Conveyor Belt through the Modbus "
"Python API, set a direction, a speed, and start and stop the device."
msgstr ""

#: ../../source/modbus/modbus_examples.rst:20
msgid "Client Modbus Vision Example"
msgstr ""

#: ../../source/modbus/modbus_examples.rst:21
msgid ""
"This script shows how to use the vision pick method from a Modbus Client,"
" through the Modbus Python API. Ned picks a red object seen in its "
"workspace and releases it on its left. Note that we use the "
"**string_to_register** method to convert a string into an object storable"
" in registers. ::"
msgstr ""

