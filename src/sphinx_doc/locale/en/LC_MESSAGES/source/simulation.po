# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Niryo All rights reserved. No part of this document
# may be reproduced or transmitted in any form or by any means without prior
# written consent of Niryo SAS
# This file is distributed under the same license as the Ned ROS
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: Ned ROS Documentation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-12 17:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/simulation.rst:3
msgid "Use Niryo robot through simulation"
msgstr ""

#: ../../source/simulation.rst:5
msgid ""
"The simulation allows to control a virtual Ned directly from your "
"computer."
msgstr ""

#: ../../source/simulation.rst:11
msgid "Ned in Gazebo Simulation"
msgstr ""

#: ../../source/simulation.rst:13
msgid ""
"In this tutorial, you will learn how to setup a robot simulation on a "
"computer."
msgstr ""

#: ../../source/simulation.rst:16
msgid ""
"You can use :niryo_studio_simulation:`Niryo Studio with the "
"simulation<>`. To do so, you just have to connect Niryo Studio to "
"\"Localhost\"."
msgstr ""

#: ../../source/simulation.rst:21
msgid "Simulation environment installation"
msgstr ""

#: ../../source/simulation.rst:24
msgid ""
"The whole ROS Stack is developed and tested on ROS **Melodic** which "
"requires **Ubuntu 18.04** to run correctly. The using of another ROS "
"version or OS may lead to malfunctions of some packages. Please follow "
"the steps in :ref:`source/installation/ubuntu_18:Ubuntu 18 Installation` "
"to install a working environment."
msgstr ""

#: ../../source/simulation.rst:30
msgid "Simulation usage"
msgstr ""

#: ../../source/simulation.rst:33
msgid "Hardware features are simulated as if you were using a real robot."
msgstr ""

#: ../../source/simulation.rst:34
msgid ""
"The data returned by the faked drivers is arbitrary and immutable. Among "
"this data, you will have : voltage, temperature, error state (always 0), "
"ping (always true), end effector state (immutable)"
msgstr ""

#: ../../source/simulation.rst:39
msgid ""
"The simulation is a powerful tool allowing to test new programs directly "
"on your computer which prevents to transfer new code on the robot."
msgstr ""

#: ../../source/simulation.rst:41
msgid ""
"It also helps for developing purpose â†’ no need to transfer code, compile "
"and restart the robot which is way slower than doing it on a desktop "
"computer."
msgstr ""

#: ../../source/simulation.rst:44
msgid "Without physics - No visualization"
msgstr ""

#: ../../source/simulation.rst:46
msgid ""
"This mode is mainly for simulation and tests purpose, bringing you in the"
" closest state as possible to a real robot control. It is available for "
"all currently supported architectures. You can access it by using the "
"commands:"
msgstr ""

#: ../../source/simulation.rst:50
msgid "One simulation: ::"
msgstr ""

#: ../../source/simulation.rst:54
msgid "Ned simulation: ::"
msgstr ""

#: ../../source/simulation.rst:58
msgid "Ned2 simulation: ::"
msgstr ""

#: ../../source/simulation.rst:63
msgid ""
"This mode is useful if your CPU capacity is limited or if you don't have "
"X server available."
msgstr ""

#: ../../source/simulation.rst:66
msgid "Options"
msgstr ""

#: ../../source/simulation.rst:67
msgid ""
"This mode is the more flexible one, as it provides all the possible "
"options to customize the simulation. For the other simulation modes (with"
" RViz and Gazebo) we will just force some of these parameters to specific"
" values."
msgstr ""

#: ../../source/simulation.rst:71
msgid "Simulation without visualization Options"
msgstr ""

#: ../../source/simulation.rst:77 ../../source/simulation.rst:157
#: ../../source/simulation.rst:235
msgid "Name"
msgstr ""

#: ../../source/simulation.rst:78 ../../source/simulation.rst:158
#: ../../source/simulation.rst:236
msgid "Default Value"
msgstr ""

#: ../../source/simulation.rst:79 ../../source/simulation.rst:159
#: ../../source/simulation.rst:237
msgid "Description"
msgstr ""

#: ../../source/simulation.rst:80 ../../source/simulation.rst:160
#: ../../source/simulation.rst:238
msgid "log_level"
msgstr ""

#: ../../source/simulation.rst:81 ../../source/simulation.rst:161
#: ../../source/simulation.rst:239
msgid "INFO"
msgstr ""

#: ../../source/simulation.rst:82 ../../source/simulation.rst:162
#: ../../source/simulation.rst:240
msgid "Log level to display for ROS loggers"
msgstr ""

#: ../../source/simulation.rst:83
msgid "ttl_enabled"
msgstr ""

#: ../../source/simulation.rst:84 ../../source/simulation.rst:87
#: ../../source/simulation.rst:96 ../../source/simulation.rst:99
#: ../../source/simulation.rst:102 ../../source/simulation.rst:170
#: ../../source/simulation.rst:248 ../../source/simulation.rst:254
#: ../../source/simulation.rst:257
msgid "true"
msgstr ""

#: ../../source/simulation.rst:85
msgid ""
"Enable or disable the TTL bus usage. This feature is used for debug "
"mainly and can lead to an unstable stack."
msgstr ""

#: ../../source/simulation.rst:86
msgid "can_enabled"
msgstr ""

#: ../../source/simulation.rst:88
msgid ""
"Enable or disable the CAN bus usage. This feature is used for debug "
"mainly and can lead to an unstable stack."
msgstr ""

#: ../../source/simulation.rst:89 ../../source/simulation.rst:166
#: ../../source/simulation.rst:244
msgid "debug"
msgstr ""

#: ../../source/simulation.rst:90 ../../source/simulation.rst:105
#: ../../source/simulation.rst:167 ../../source/simulation.rst:176
#: ../../source/simulation.rst:179 ../../source/simulation.rst:245
msgid "false"
msgstr ""

#: ../../source/simulation.rst:91 ../../source/simulation.rst:168
#: ../../source/simulation.rst:246
msgid "Launch in debug mode. For development and debug only."
msgstr ""

#: ../../source/simulation.rst:92 ../../source/simulation.rst:172
#: ../../source/simulation.rst:250
msgid "conf_location"
msgstr ""

#: ../../source/simulation.rst:93 ../../source/simulation.rst:173
#: ../../source/simulation.rst:251
msgid "version.txt"
msgstr ""

#: ../../source/simulation.rst:94 ../../source/simulation.rst:174
#: ../../source/simulation.rst:252
msgid "Location of the version.txt file. A path to the file is required."
msgstr ""

#: ../../source/simulation.rst:95 ../../source/simulation.rst:175
msgid "simu_gripper"
msgstr ""

#: ../../source/simulation.rst:97
msgid "Simulate the presence of a gripper id 11 on the bus"
msgstr ""

#: ../../source/simulation.rst:98 ../../source/simulation.rst:178
#: ../../source/simulation.rst:256
msgid "simu_conveyor"
msgstr ""

#: ../../source/simulation.rst:100
msgid ""
"Simulate the presence of a conveyor (CAN for One and Ned, TTL for Ned2, "
"based on configuration files) on the bus"
msgstr ""

#: ../../source/simulation.rst:101
msgid "vision_enabled"
msgstr ""

#: ../../source/simulation.rst:103
msgid "Enable the Vision Kit"
msgstr ""

#: ../../source/simulation.rst:104
msgid "gazebo"
msgstr ""

#: ../../source/simulation.rst:106
msgid ""
"Enable gazebo specific parameters (However it does not launch gazebo, use"
" gazebo specific launch file for that)"
msgstr ""

#: ../../source/simulation.rst:109
msgid "Without physics - RViz Visualization"
msgstr ""

#: ../../source/simulation.rst:111
msgid ""
"A simple visualization of the robot is possible via a tool called Rviz. "
"This application will simulate the robot with its correct geometry and "
"positions but without physics to avoid using too much CPU."
msgstr ""

#: ../../source/simulation.rst:115
msgid "Control with trackbar"
msgstr ""

#: ../../source/simulation.rst:117
msgid ""
"This visualization allows an easy first control of the robot, and helps "
"to understand joints disposal. You can access it by using the command: ::"
msgstr ""

#: ../../source/simulation.rst:122
msgid ""
"Rviz should open with a window containing 6 trackbars. Each of these "
"trackbars allows to control the corresponding joint."
msgstr ""

#: ../../source/simulation.rst:129
msgid "Example of trackbars use."
msgstr ""

#: ../../source/simulation.rst:132
msgid "Control with ROS"
msgstr ""

#: ../../source/simulation.rst:135
msgid ""
"Not only `Rviz <http://wiki.ros.org/rviz>`_ can display the robot, but it"
" can also be linked with ROS controllers to show the robot's actions from"
" ROS commands!"
msgstr ""

#: ../../source/simulation.rst:136
msgid "This method can help you debug ROS topics, services and also, API scripts."
msgstr ""

#: ../../source/simulation.rst:138 ../../source/simulation.rst:202
msgid "To run it: ::"
msgstr ""

#: ../../source/simulation.rst:146
msgid "Rviz opening, with the robot ready to be controlled with ROS!"
msgstr ""

#: ../../source/simulation.rst:149
msgid "RViz Visualization options"
msgstr ""

#: ../../source/simulation.rst:151
msgid "Table of RViz launch Options"
msgstr ""

#: ../../source/simulation.rst:163 ../../source/simulation.rst:241
msgid "hardware_version"
msgstr ""

#: ../../source/simulation.rst:164 ../../source/simulation.rst:242
msgid "ned"
msgstr ""

#: ../../source/simulation.rst:165 ../../source/simulation.rst:243
msgid ""
"Use the parameters dedicated to this specific hardware_version. Possible "
"values are \"one\", \"ned\" and \"ned2\""
msgstr ""

#: ../../source/simulation.rst:169 ../../source/simulation.rst:247
msgid "gui"
msgstr ""

#: ../../source/simulation.rst:171 ../../source/simulation.rst:249
msgid "Enable the gui visualization"
msgstr ""

#: ../../source/simulation.rst:177
msgid ""
"Simulate the presence of a gripper id 11 on the bus (Visualisation of the"
" tool will not be visible, whatever the value of this parameter)"
msgstr ""

#: ../../source/simulation.rst:180 ../../source/simulation.rst:258
msgid ""
"Simulate the presence of a conveyor (Visualisation of the conveyor will "
"not be visible, whatever the value of this parameter)"
msgstr ""

#: ../../source/simulation.rst:183
msgid "With physics - Gazebo Simulation"
msgstr ""

#: ../../source/simulation.rst:185
msgid ""
"For the simulation, Ned uses Gazebo, a well known tool among the ROS "
"community. It allows:"
msgstr ""

#: ../../source/simulation.rst:188
msgid "Collision."
msgstr ""

#: ../../source/simulation.rst:189
msgid ""
"World creation â†’ A virtual environment in which the robot can deal with "
"objects."
msgstr ""

#: ../../source/simulation.rst:190
msgid "Gripper & Camera using."
msgstr ""

#: ../../source/simulation.rst:192
msgid ""
"The Niryo Gripper 1 has been replicated in Gazebo. The Camera is also "
"implemented."
msgstr ""

#: ../../source/simulation.rst:196
msgid ""
"Gazebo also generates camera distortion, which brings the simulation even"
" closer from the reality!"
msgstr ""

#: ../../source/simulation.rst:199
msgid "Launch Gazebo simulation"
msgstr ""

#: ../../source/simulation.rst:200
msgid "A specific world has been created to use Ned in Gazebo with 2 workspaces."
msgstr ""

#: ../../source/simulation.rst:210
msgid "Gazebo view, with the robot ready to be controlled with ROS!"
msgstr ""

#: ../../source/simulation.rst:213
msgid ""
"You can edit Gazebo world to do your own! It's placed in the folder "
"*worlds* of the package niryo_robot_gazebo."
msgstr ""

#: ../../source/simulation.rst:217
msgid "Gazebo Simulation options"
msgstr ""

#: ../../source/simulation.rst:219
msgid ""
"The user can disable 3 things by adding the specific string to the "
"command line:"
msgstr ""

#: ../../source/simulation.rst:221
msgid "the Gazebo graphical interface: `gui:=false`."
msgstr ""

#: ../../source/simulation.rst:222
msgid ""
"the Camera & the Gripper - Vision & Gripper wise functions won't be "
"usable: `gripper_n_camera:=false`."
msgstr ""

#: ../../source/simulation.rst:226
msgid ""
"Gazebo can be very slow. If your tests do not need Gripper and Camera, "
"consider using Rviz to alleviate your CPU."
msgstr ""

#: ../../source/simulation.rst:229
msgid "Table of Gazebo launch Options"
msgstr ""

#: ../../source/simulation.rst:253
msgid "gripper_n_camera"
msgstr ""

#: ../../source/simulation.rst:255
msgid "Simulate the presence of a gripper id 11 and a camera on the bus"
msgstr ""

#~ msgid "Use Niryo Robot through Simulation"
#~ msgstr ""

#~ msgid "In this tutorial, you will learn how to setup simulation on a computer"
#~ msgstr ""

#~ msgid ""
#~ "You can use :niryo_studio_simulation:`Niryo "
#~ "Studio with the simulation<>`. For that,"
#~ " you just have to connect Niryo "
#~ "Studio to \"Localhost\""
#~ msgstr ""

#~ msgid "Simulation Environment Installation"
#~ msgstr ""

#~ msgid ""
#~ "The whole ROS Stack is developed "
#~ "and tested on ROS **Melodic** which "
#~ "requires **Ubuntu 18.04** to run "
#~ "correctly. The using of another ROS "
#~ "version or OS may lead to "
#~ "malfunctions of some packages"
#~ msgstr ""

#~ msgid ""
#~ "To allow the simulation to run on"
#~ " your computer, you will need to "
#~ "install ROS and some packages"
#~ msgstr ""

#~ msgid "Installation Index :"
#~ msgstr ""

#~ msgid "Prepare Environment"
#~ msgstr ""

#~ msgid "All terminal command listed are for Ubuntu users"
#~ msgstr ""

#~ msgid ""
#~ "Place yourself in the folder of "
#~ "your choice and create a folder "
#~ "**catkin_ws_niryo_ned** as well as a "
#~ "sub-folder **src** ::"
#~ msgstr ""

#~ msgid ""
#~ "Then go to the folder "
#~ "**catkin_ws_niryo_ned** and clone Ned "
#~ "repository in the folder **src**. For"
#~ " the future operation, be sure to "
#~ "stay in the **catkin_ws_niryo_ned** folder "
#~ "::"
#~ msgstr ""

#~ msgid "Install ROS Dependencies"
#~ msgstr ""

#~ msgid ""
#~ "You firstly need to install ROS "
#~ "Melodic. To do so, follow the ROS"
#~ " official tutorial `here "
#~ "<http://wiki.ros.org/melodic/Installation/Ubuntu>`_ and "
#~ "chose the **Desktop-Full Install**"
#~ msgstr ""

#~ msgid "Install Additional Packages"
#~ msgstr ""

#~ msgid ""
#~ "To ensure the functioning of all "
#~ "Ned's packages, you need to install "
#~ "several more packages :"
#~ msgstr ""

#~ msgid ""
#~ "For each packages, we have referenced"
#~ " all the dependencies in their "
#~ "respective *package.xml* file, which allow "
#~ "to install each dependency via *rosdep*"
#~ " command ::"
#~ msgstr ""

#~ msgid "ROS packages needed are :"
#~ msgstr ""

#~ msgid "To install a package on Ubuntu : ::"
#~ msgstr ""

#~ msgid "Melodic specific packages needed are :"
#~ msgstr ""

#~ msgid "To install a ROS Melodic's package on Ubuntu : ::"
#~ msgstr ""

#~ msgid "Setup Ned ROS Environment"
#~ msgstr ""

#~ msgid "Be sure to be still placed in the **catkin_ws_niryo_ned** folder"
#~ msgstr ""

#~ msgid "Then perform the **make** of Ned's ROS Stack via the command ::"
#~ msgstr ""

#~ msgid ""
#~ "It is necessary to source the "
#~ "configuration file to add all Ned "
#~ "packages to ROS environment. To do "
#~ "so, run the command ::"
#~ msgstr ""

#~ msgid ""
#~ "It is necessary to run this "
#~ "command each time you launch a new"
#~ " terminal. If you want to make "
#~ "this sourcing appends for all your "
#~ "futur terminals, you can add it to"
#~ " your **bashrc** file ::"
#~ msgstr ""

#~ msgid "Installation is now finished !"
#~ msgstr ""

#~ msgid "Simulation Utilization"
#~ msgstr ""

#~ msgid ""
#~ "If you haven't follow the step of"
#~ " :ref:`Simulation Environment Installation "
#~ "<Simulation Environment Installation>`, you "
#~ "won't be able to use the "
#~ "simulation"
#~ msgstr ""

#~ msgid "Hardware features won't be accessible"
#~ msgstr ""

#~ msgid ""
#~ "It also helps for developing purpose "
#~ "â†’ no need to transfer code, "
#~ "compile and restart the robot which "
#~ "is way slower than doing it on "
#~ "a desktop computer"
#~ msgstr ""

#~ msgid "Without Physics - Visualization"
#~ msgstr ""

#~ msgid "The visualization happens with Rviz which is a powerful tool"
#~ msgstr ""

#~ msgid "Control with Trackbar"
#~ msgstr ""

#~ msgid ""
#~ "This visualization allows an easy first"
#~ " control of the robot, and helps "
#~ "to understand joints disposal. You can"
#~ " access it by using the command "
#~ "::"
#~ msgstr ""

#~ msgid ""
#~ "Rviz should open with a window "
#~ "containing 6 trackbars. Each of these"
#~ " trackbars allows to control the "
#~ "corresponding joint"
#~ msgstr ""

#~ msgid "Example of trackbars use"
#~ msgstr ""

#~ msgid ""
#~ "Not only Rviz can display the "
#~ "Robot, it can also be linked with"
#~ " ROS controllers to show robot's "
#~ "actions from ROS commands !"
#~ msgstr ""

#~ msgid "To run it : ::"
#~ msgstr ""

#~ msgid "Rviz Opening, with the robot ready to be controlled with ROS !"
#~ msgstr ""

#~ msgid "With Physics - Simulation"
#~ msgstr ""

#~ msgid ""
#~ "For the simulation, Ned use Gazebo, "
#~ "a well known tool among the ROS"
#~ " community. It allows :"
#~ msgstr ""

#~ msgid "collision"
#~ msgstr ""

#~ msgid ""
#~ "world creation â†’ An virtual environment"
#~ " in which the robot can deal "
#~ "with objects"
#~ msgstr ""

#~ msgid "Gripper & Camera using"
#~ msgstr ""

#~ msgid ""
#~ "The Niryo Gripper 1 has been "
#~ "replicated in Gazebo. The Camera is "
#~ "also implemented"
#~ msgstr ""

#~ msgid ""
#~ "Gazebo also generates camera distortion, "
#~ "which brings the simulation even closer"
#~ " from the reality !"
#~ msgstr ""

#~ msgid "Gazebo view, with the robot ready to be controlled with ROS !"
#~ msgstr ""

#~ msgid ""
#~ "You can edit Gazebo world to do"
#~ " your own ! It's placed in the"
#~ " folder *worlds* of the package "
#~ "niryo_robot_gazebo"
#~ msgstr ""

#~ msgid ""
#~ "The user can disable 3 things by"
#~ " adding the specific string to the"
#~ " command line :"
#~ msgstr ""

#~ msgid "the Gazebo Graphical Interface : `gui:=false`"
#~ msgstr ""

#~ msgid ""
#~ "the camera & the grupper - Vision"
#~ " & Gripper wise functions won't be"
#~ " usable : `gripper_n_camera:=false`"
#~ msgstr ""

#~ msgid ""
#~ "Gazebo can be very slow. If your"
#~ " tests do not need gripper and "
#~ "camera, consider using Rviz to alleviate"
#~ " your CPU"
#~ msgstr ""

#~ msgid ""
#~ "If you haven't follow the step of"
#~ " :ref:`Simulation Environment Installation "
#~ "<Simulation Environment Installation>`. you "
#~ "won't be able to use the "
#~ "simulation."
#~ msgstr ""

#~ msgid ""
#~ "You can use :niryo_studio_simulation:`Niryo "
#~ "Studio with the simulation<>`. For that,"
#~ " you just have to connect Niryo "
#~ "Studio to \"Localhost\"."
#~ msgstr ""

#~ msgid "collision."
#~ msgstr ""

#~ msgid ""
#~ "world creation â†’ An virtual environment"
#~ " in which the robot can deal "
#~ "with objects."
#~ msgstr ""

#~ msgid ""
#~ "You can edit Gazebo world to do"
#~ " your own ! It's placed in the"
#~ " folder *worlds* of the package "
#~ "niryo_robot_gazebo."
#~ msgstr ""

#~ msgid ""
#~ "For the simulation, Ned use Gazebo, "
#~ "a well known tool among the ROS"
#~ " community. It allows:"
#~ msgstr ""

#~ msgid ""
#~ "To allow the simulation to run on"
#~ " your computer, you will need to "
#~ "install ROS and some packages."
#~ msgstr ""

#~ msgid "Installation index:"
#~ msgstr ""

#~ msgid "Prepare environment"
#~ msgstr ""

#~ msgid "All terminal command listed are for Ubuntu users."
#~ msgstr ""

#~ msgid ""
#~ "Place yourself in the folder of "
#~ "your choice and create a folder "
#~ "**catkin_ws_niryo_ned** as well as a "
#~ "sub-folder **src**: ::"
#~ msgstr ""

#~ msgid ""
#~ "Then go to the folder "
#~ "**catkin_ws_niryo_ned** and clone Ned "
#~ "repository in the folder **src**. For"
#~ " the future operation, be sure to "
#~ "stay in the **catkin_ws_niryo_ned** folder:"
#~ " ::"
#~ msgstr ""

#~ msgid "Install ROS dependencies"
#~ msgstr ""

#~ msgid "Install ROS"
#~ msgstr ""

#~ msgid ""
#~ "You firstly need to install ROS "
#~ "Melodic. To do so, follow the ROS"
#~ " official tutorial `here "
#~ "<http://wiki.ros.org/melodic/Installation/Ubuntu>`_ and "
#~ "chose the **Desktop-Full Install**."
#~ msgstr ""

#~ msgid "Install additional packages"
#~ msgstr ""

#~ msgid ""
#~ "To ensure the functioning of all "
#~ "Ned's packages, you need to install "
#~ "several more packages:"
#~ msgstr ""

#~ msgid "Method 1: Quick installation via ROSDep"
#~ msgstr ""

#~ msgid ""
#~ "For each packages, we have referenced"
#~ " all the dependencies in their "
#~ "respective *package.xml* file, which allow "
#~ "to install each dependency via *rosdep*"
#~ " command: ::"
#~ msgstr ""

#~ msgid "Method 2: Full installation"
#~ msgstr ""

#~ msgid "ROS packages needed are:"
#~ msgstr ""

#~ msgid "build-essential"
#~ msgstr ""

#~ msgid "catkin"
#~ msgstr ""

#~ msgid "python-catkin-pkg"
#~ msgstr ""

#~ msgid "python-pymodbus"
#~ msgstr ""

#~ msgid "python-rosdistro"
#~ msgstr ""

#~ msgid "python-rospkg"
#~ msgstr ""

#~ msgid "python-rosdep-modules"
#~ msgstr ""

#~ msgid "python-rosinstall python-rosinstall-generator"
#~ msgstr ""

#~ msgid "python-wstool"
#~ msgstr ""

#~ msgid "To install a package on Ubuntu: ::"
#~ msgstr ""

#~ msgid "Melodic specific packages needed are:"
#~ msgstr ""

#~ msgid "moveit"
#~ msgstr ""

#~ msgid "control"
#~ msgstr ""

#~ msgid "controllers"
#~ msgstr ""

#~ msgid "tf2-web-republisher"
#~ msgstr ""

#~ msgid "rosbridge-server"
#~ msgstr ""

#~ msgid "joint-state-publisher-gui"
#~ msgstr ""

#~ msgid "To install a ROS Melodic's package on Ubuntu: ::"
#~ msgstr ""

#~ msgid "Setup Ned ROS environment"
#~ msgstr ""

#~ msgid "Be sure to be still placed in the **catkin_ws_niryo_ned** folder."
#~ msgstr ""

#~ msgid "Then perform the **make** of Ned's ROS Stack via the command: ::"
#~ msgstr ""

#~ msgid ""
#~ "If no errors occurred during the "
#~ "**make** phase, the setup of your "
#~ "environment is almost complete!"
#~ msgstr ""

#~ msgid ""
#~ "It is necessary to source the "
#~ "configuration file to add all Ned "
#~ "packages to ROS environment. To do "
#~ "so, run the command: ::"
#~ msgstr ""

#~ msgid ""
#~ "It is necessary to run this "
#~ "command each time you launch a new"
#~ " terminal. If you want to make "
#~ "this sourcing appends for all your "
#~ "futur terminals, you can add it to"
#~ " your **bashrc** file: ::"
#~ msgstr ""

#~ msgid "Installation is now finished!"
#~ msgstr ""

#~ msgid "Simulation utilization"
#~ msgstr ""

#~ msgid ""
#~ "The whole ROS Stack is developed "
#~ "and tested on ROS **Melodic** which "
#~ "requires **Ubuntu 18.04** to run "
#~ "correctly. The using of another ROS "
#~ "version or OS may lead to "
#~ "malfunctions of some packages."
#~ msgstr ""

#~ msgid ""
#~ "If you haven't follow the step of"
#~ " :ref:`Simulation Environment Installation "
#~ "<source/simulation:Simulation Environment Installation>`."
#~ " you won't be able to use the"
#~ " simulation."
#~ msgstr ""

#~ msgid "Hardware features won't be accessible."
#~ msgstr ""

#~ msgid ""
#~ "The simulation is a powerful tool "
#~ "which allow to test new programs "
#~ "directly on your computer which prevent"
#~ " to transfer new code on the "
#~ "robot."
#~ msgstr ""

#~ msgid ""
#~ "The whole ROS Stack is developed "
#~ "and tested on ROS **Melodic** which "
#~ "requires **Ubuntu 18.04** to run "
#~ "correctly. The using of another ROS "
#~ "version or OS may lead to "
#~ "malfunctions of some packages. Please "
#~ "follow the steps in :ref:`Simulation "
#~ "Environment Installation <source/installation/ubuntu_18>`."
#~ " to install a working environment."
#~ msgstr ""

#~ msgid ""
#~ "The data returned by the faked "
#~ "drivers is arbitrary and immutable. "
#~ "Among this data,"
#~ msgstr ""

#~ msgid ""
#~ "you will have : voltage, temperature,"
#~ " error state (always 0), ping (always"
#~ " true), end effector state (immutable)"
#~ msgstr ""

#~ msgid ""
#~ "This mode is mainly for simulation "
#~ "and tests purpose, bringing you in "
#~ "the closest state as possible to a"
#~ " real robot control. It is available"
#~ " for all currently supported architectures."
#~ " You can access it by using the"
#~ " command: ::"
#~ msgstr ""

#~ msgid "One simulation:"
#~ msgstr ""

#~ msgid "`roslaunch niryo_robot_bringup niryo_one_simulation.launch`"
#~ msgstr ""

#~ msgid "Ned simulation:"
#~ msgstr ""

#~ msgid "`roslaunch niryo_robot_bringup niryo_ned_simulation.launch`"
#~ msgstr ""

#~ msgid "Ned2 simulation:"
#~ msgstr ""

#~ msgid "`roslaunch niryo_robot_bringup niryo_ned2_simulation.launch`"
#~ msgstr ""

#~ msgid "TODO"
#~ msgstr ""

#~ msgid "**TODO add parameters**"
#~ msgstr ""

#~ msgid "??"
#~ msgstr ""

#~ msgid "The visualization happens with Rviz which is a powerful tool."
#~ msgstr ""

#~ msgid "One simulation:  ::"
#~ msgstr ""

#~ msgid "Ned simulation:  ::"
#~ msgstr ""

#~ msgid "Without physics - Visualization"
#~ msgstr ""

#~ msgid ""
#~ "Not only Rviz can display the "
#~ "robot, it can also be linked with"
#~ " ROS controllers to show robot's "
#~ "actions from ROS commands!"
#~ msgstr ""

#~ msgid ""
#~ "This method can help you debugging "
#~ "ROS topics, services and also, API "
#~ "scripts."
#~ msgstr ""

#~ msgid "Todo"
#~ msgstr ""

#~ msgid "add parameters"
#~ msgstr ""

#~ msgid "With physics - Simulation"
#~ msgstr ""

#~ msgid "Launch simulation"
#~ msgstr ""

#~ msgid "Simulation option"
#~ msgstr ""

#~ msgid "RViz Simulation options"
#~ msgstr ""

#~ msgid ""
#~ "Not only :ref:`RViz<http://wiki.ros.org/rviz>`_ can"
#~ " display the robot, it can also "
#~ "be linked with ROS controllers to "
#~ "show robot's actions from ROS commands!"
#~ msgstr ""

#~ msgid ""
#~ "Not only :ref:`RViz <http://wiki.ros.org/rviz>`_ "
#~ "can display the robot, it can also"
#~ " be linked with ROS controllers to"
#~ " show robot's actions from ROS "
#~ "commands!"
#~ msgstr ""

#~ msgid "RViz Visualization Options"
#~ msgstr ""

#~ msgid "Gazebo Simulation Options"
#~ msgstr ""

#~ msgid "Use Niryo robot through simulation"
#~ msgstr ""

#~ msgid "In this tutorial, you will learn how to setup simulation on a computer."
#~ msgstr ""

#~ msgid ""
#~ "The whole ROS Stack is developed "
#~ "and tested on ROS **Melodic** which "
#~ "requires **Ubuntu 18.04** to run "
#~ "correctly. The using of another ROS "
#~ "version or OS may lead to "
#~ "malfunctions of some packages. Please "
#~ "follow the steps in "
#~ ":ref:`source/installation/ubuntu_18:Ubuntu 18 "
#~ "Installation`."
#~ msgstr ""

#~ msgid "to install a working environment."
#~ msgstr ""

#~ msgid ""
#~ "The simulation is a powerful tool "
#~ "allowing to test new programs directly"
#~ " on your computer which prevent to"
#~ " transfer new code on the robot."
#~ msgstr ""

#~ msgid "Without physics - No Visualization"
#~ msgstr ""

#~ msgid ""
#~ "Not only `RViz <http://wiki.ros.org/rviz>`_ "
#~ "can display the robot, it can also"
#~ " be linked with ROS controllers to"
#~ " show robot's actions from ROS "
#~ "commands!"
#~ msgstr ""

#~ msgid ""
#~ "World creation â†’ An virtual environment"
#~ " in which the robot can deal "
#~ "with objects."
#~ msgstr ""

#~ msgid "Simulate a Niryo Robot"
#~ msgstr ""

#~ msgid "le lien ne fonctionne toujours pas"
#~ msgstr ""

